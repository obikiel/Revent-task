name: Deploy to AKS

on:
  push:
    branches:
      - master

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Log in to Azure Container Registry
        run: echo "${{ secrets.ACR_PASSWORD }}" | docker login ${{ secrets.ACR_LOGIN_SERVER }} -u ${{ secrets.ACR_USERNAME }} --password-stdin

      - name: Build Docker Image
        run: |
          docker build -t ${{ secrets.ACR_LOGIN_SERVER }}/tasklist-api:latest .

      - name: Push Image to ACR
        run: docker push ${{ secrets.ACR_LOGIN_SERVER }}/tasklist-api:latest

  deploy-to-aks:
    needs: build-and-push
    runs-on: ubuntu-latest

    permissions:
      id-token: write  # âœ… Required for OIDC authentication
      contents: read

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # - name: Log in to Azure
      #   uses: azure/login@v1
      #   with:
      #     client-id: ${{ secrets.AZURE_CLIENT_ID }}
      #     tenant-id: ${{ secrets.AZURE_TENANT_ID }}
      #     subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
      - name: Log in to Azure using local account
        run: az login --use-device-code

      - name: Get AKS Credentials
        run: az aks get-credentials --resource-group ${{ secrets.AKS_RESOURCE_GROUP }} --name ${{ secrets.AKS_CLUSTER_NAME }}

      - name: Deploy to AKS
        run: |
          kubectl apply -f k8s-deployment.yaml
          kubectl apply -f k8s-service.yaml
          kubectl apply -f k8s-ingress.yaml
          kubectl apply -f postgres.yaml


      - name: Force AKS to pull the latest image
        run: kubectl set image deployment/tasklist-api tasklist-api=${{ secrets.ACR_LOGIN_SERVER }}/tasklist-api:latest

      # - name: Run Migrations
      #   run: |
      #     kubectl exec $(kubectl get pod -l app=tasklist-api -o jsonpath="{.items[0].metadata.name}") -- python manage.py migrate  

      - name: Restart Deployment
        run: kubectl rollout restart deployment tasklist-api
